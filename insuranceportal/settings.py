"""
Django settings for insuranceportal project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from decouple import config  

import os
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("JWT_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['15.206.234.123','*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',


    'authservice.apps.AuthserviceConfig',
    'administratorservice.apps.AdministratorserviceConfig',
    'coreservice.apps.CoreserviceConfig',
    'insurecowagentservice.apps.InsurecowagentserviceConfig',
    'enterpriseservice.apps.EnterpriseserviceConfig',
    'insurancecompanyservice.apps.InsurancecompanyserviceConfig',
    'insuranceservice.apps.InsuranceserviceConfig',
    'assetservice.apps.AssetserviceConfig',
    'apiservice.apps.ApiserviceConfig',
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'insuranceportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'insuranceportal.wsgi.application'
AUTH_USER_MODEL = 'authservice.User'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DB
DATABASES = {
    'default': {
        'ENGINE': config("POSTGRE_DB_ENGINE"),
        'NAME': config("POSTGRE_DB_NAME"),
        'USER': config("POSTGRE_DB_USER"),
        'PASSWORD': config("POSTGRE_DB_PASSWORD"),
        'HOST': config("POSTGRE_DB_HOST"),
        'PORT': config("POSTGRE_DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 5,  # Set minimum password length to 5
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Define where your static files are located (only for development)
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Assuming the static folder is at the root of your project
]


# In production, you should also define where static files will be collected
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_DIRS = [
    BASE_DIR / "media",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/'  # Redirect after a successful login
LOGOUT_REDIRECT_URL = '/' # Redirect after a successful logout

SITE_URL = 'http://127.0.0.1:8000'

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=365 * 100),  # Effectively unlimited
    "REFRESH_TOKEN_LIFETIME": timedelta(days=365 * 100), # Effectively unlimited
    "UPDATE_LAST_LOGIN": False,
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
}

# CORS Configuration
#CORS_ALLOW_ALL_ORIGINS = True
APPEND_SLASH = True
# settings.py
DATETIME_FORMAT = 'N j, Y, P'  # or any other format you prefer
JWT_SECRET_KEY = SECRET_KEY
CORS_ALLOWED_ORIGINS = [
    "https://insuranceportal.insurecow.com",
    "http://localhost:3000",
    "https://farmmanagement.insurecow.com",
    "http://centralportal.insurecow.com",
    "https://centralportal.insurecow.com",

]
DATA_UPLOAD_MAX_MEMORY_SIZE = 314572800

BULKSMS_CONFIG = {
    "USERNAME": config("BULKSMS_USERNAME"),
    "PASSWORD": config("BULKSMS_PASSWORD"),
    "APICODE": config("BULKSMS_APICODE"),
    "CLI": config("BULKSMS_CLI"),
    "COUNTRY_CODE": config("BULKSMS_COUNTRYCODE"),
    "BILL_MSISDN": config("BULKSMS_BILLMSISDN"),
    "TRAN_TYPE": config("BULKSMS_TRANTYPE"),
    "REQUEST_TYPE": config("BULKSMS_REQUESTTYPE"),
    "RN_CODE": config("BULKSMS_RNCODE"),
}

# Allow specific methods
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

# Allow specific headers
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]
